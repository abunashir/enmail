#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." >/dev/null && pwd )"
PGP_HOME="${ROOT_DIR}/tmp/pgp_home"

set -vx

mkdir -p "${PGP_HOME}"

# Available parameters for unattended GPG key generation are described here:
# https://www.gnupg.org/documentation/manuals/gnupg/Unattended-GPG-key-generation.html

gpg --no-permission-warning --homedir "${PGP_HOME}" --batch --gen-key <<-HERE_PARAMS
	%no-protection
	Key-Type: RSA
	Key-Usage: sign, cert
	Key-Length: 2048
	Subkey-Type: RSA
	Subkey-Length: 2048
	Subkey-Usage: encrypt
	Name-Real: Some Arbitrary Key
	Name-Email: whatever@example.test
	Name-Comment: Without passphrase
	Expire-Date: 0
HERE_PARAMS

gpg --no-permission-warning --homedir "${PGP_HOME}" --batch --gen-key <<-HERE_PARAMS
	%no-protection
	Key-Type: RSA
	Key-Usage: sign, cert
	Key-Length: 2048
	Subkey-Type: RSA
	Subkey-Length: 2048
	Subkey-Usage: encrypt
	Name-Real: Cato Elder
	Name-Email: cato.elder@example.test
	Name-Comment: Without passphrase
	Expire-Date: 0
HERE_PARAMS

gpg --no-permission-warning --homedir "${PGP_HOME}" --batch --gen-key <<-HERE_PARAMS
	%no-protection
	Key-Type: RSA
	Key-Usage: sign, cert
	Key-Length: 2048
	Subkey-Type: RSA
	Subkey-Length: 2048
	Subkey-Usage: encrypt
	Name-Real: Roman Senate
	Name-Email: senate@example.test
	Name-Comment: Without passphrase
	Expire-Date: 0
HERE_PARAMS

gpg --no-permission-warning --homedir "${PGP_HOME}" --batch --gen-key <<-HERE_PARAMS
	Key-Type: RSA
	Key-Usage: sign, cert
	Key-Length: 2048
	Subkey-Type: RSA
	Subkey-Length: 2048
	Subkey-Usage: encrypt
	Name-Real: Cato Elder
	Name-Email: cato.elder+pwd@example.test
	Name-Comment: Password-protected
	Expire-Date: 0
	Passphrase: 1234
HERE_PARAMS

# Existing keys are now:

gpg --no-permission-warning --homedir "${PGP_HOME}" --list-keys
